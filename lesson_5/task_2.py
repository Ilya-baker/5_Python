# Задача 2
# Написать программу сложения и умножения двух шестнадцатеричных чисел. При этом каждое число представляется
# как коллекция, элементы которой — цифры числа. Например, пользователь ввёл A2 и C4F. Нужно сохранить их
# как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно. Сумма чисел из примера: [‘C’, ‘F’, ‘1’],
# произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].
# Примечание: Если воспользоваться функциями hex() и/или int() для преобразования систем счисления,
# задача решается в несколько строк. Для прокачки алгоритмического мышления такой вариант не подходит.
# Поэтому использование встроенных функций для перевода из одной системы счисления в другую в данной задаче под запретом.

from collections import deque

ABC = {'0':0, '1':1, '2':2, '3':3,
       '4':4, '5':5, '6':6, '7':7,
       '8':8, '9':9, 'A':10, 'B':11,
       'C':12, 'D':13, 'E':14, 'F':15}

number = ('0', '1', '2', '3',
          '4', '5', '6', '7',
          '8', '9', 'A', 'B',
          'C', 'D', 'E', 'F')

num_1 = deque(input('Введите 1 число (цифры от 0 до 9 и\или буквы от A до F): ').upper())
num_2 = deque(input('Введите 2 число (цифры от 0 до 9 и\или буквы от A до F): ').upper())
num_3 = deque()
brain = 0

if len(num_1) < len(num_2):
    num_1.extendleft((len(num_2) - len(num_1)) * '0')
else:
    num_2.extendleft((len(num_1) - len(num_2)) * '0')

while len(num_1) > 0:
    pop_1 = ABC[num_1.pop()]
    pop_2 = ABC[num_2.pop()]
    sum_num = pop_1 + pop_2

    if sum_num > 15:
        sum_num -= 16
        brain = 1
    else:
        brain = 0

    num_3.appendleft(number[sum_num])

    if brain > 0:
        num_3.appendleft('1')

print(f'Сумма чисел равна:\n{num_3}')
